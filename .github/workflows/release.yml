name: RailOSConsist Release
on:
  push:
    tags:
      - "v*"
permissions:
  contents: write

jobs:
  create-pdf:
    name: Create Readme
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Publish PDF Document
        uses: shrink/actions-document-publish@v1
        id: publish-document
        with:
          sources: 'README.md'
      - name: Move PDF
        run: mv ${{ steps.publish-document.outputs.pdf }} README.pdf
      - name: Archive Modelica Binaries
        uses: actions/upload-artifact@v2
        with:
          name: railosconsist-readme
          path: README.pdf
          retention-days: 1
  create-release:
    name: Create Release
    runs-on: windows-latest
    needs: [create-pdf]
    steps:
      - uses: actions/checkout@v3
      - name: Retrieve README PDF
        uses: actions/download-artifact@v2
        with:
          name: railosconsist-readme
          path: "document.pdf"
      - name: Get Previous tag
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
      - name: Set Output Directory
        uses: mathiasvr/command-output@v1
        id: outdir_name
        with:
          run: echo $GITHUB_REPOSITORY | cut -d '/' -f 2 | cut --complement -f1 -d '-' | xargs
      - name: Set Version Suffix
        uses: mathiasvr/command-output@v1
        id: outver
        with:
          run: |
            VERSION="${{ steps.previoustag.outputs.tag }}"
            echo ${VERSION//./_} | xargs
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          architecture: 'x64'
      - uses: Gr1N/setup-poetry@v7
      - name: Create Package
        run: |
          LC_ALL="UTF-8" LC_CTYPE="UTF-8" poetry install
          DISPLAY="" poetry run pyinstaller --clean -y RailOSConsist.spec
          sudo apt install zip -y
          mkdir -p release
          cp dist/RailOSConsist.exe release/
          cp document.pdf release/README.pdf
        shell: bash
      - name: Archive Release
        uses: thedoctor0/zip-release@0.7.0
        with:
          type: 'zip'
          filename: 'release.zip'
          path: 'release'
      - name: Rename Release
        run: |
          DIR_NAME=$(echo "${{ steps.outdir_name.outputs.stdout }}" | xargs)_$(echo "${{ steps.outver.outputs.stdout }}" | xargs)
          DIR_NAME=$(echo $DIR_NAME | xargs)
          mv release.zip $DIR_NAME.zip
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          name: ${{ github.repository }} Release ${{ steps.previoustag.outputs.tag }}
          tag_name: ${{ steps.previoustag.outputs.tag }}
          files: |
            *.zip
